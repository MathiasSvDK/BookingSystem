@page "/viewtreatments"
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager

@if (signInManager.Context.User.Claims.Where(c => c.Type == "gruppe").FirstOrDefault().Value != "3")
{
	<table class="table">
		<thead>
			<tr>
				<td>
					Behandling
				</td>
				<td>
					Beskrivelse
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
		</thead>
		<tbody>
			@foreach (var treatment in treatments)
			{
				<tr>
					<td>
						@treatment.TreatmentName
					</td>
					<td>
						@treatment.Description
					</td>
					<td>
						<a class="btn btn-info" href="/edittreatment/@treatment.TreatmentId">
							<i class="bi bi-pencil-square"></i>
						</a>
					</td>
					<td>
					<td>
						<button class="btn btn-danger" @onclick="() => deleteOnClick(treatment.TreatmentId)">
							<i class="bi bi-trash"></i>
						</button>
					</td>
					</td>
				</tr>
			}
		</tbody>

	</table>
}

@code {
	private List<Treatment> treatments = new List<Treatment>();

	protected override void OnInitialized()
	{
		treatments = _treatmentRepo.GetAllTreatments().OrderBy(t => t.TreatmentName).ToList();
	}

	public async Task deleteOnClick(int treatmentId)
	{
		bool res = await Jsruntime.InvokeAsync<bool>
		("confirm", $"Er du sikker på at du vil slette denne Behandling?");
		if (res)
		{
			await _treatmentRepo.DeleteTreatment(treatmentId);
			toastService.ShowSuccess("Behandlingen blev fjernet");
			NavigationManager.NavigateTo("/viewtreatments");
		}
	}
}