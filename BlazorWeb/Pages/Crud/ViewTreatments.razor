@page "/viewtreatments"
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager

@if (signInManager.Context.User.Claims.Where(c => c.Type == "gruppe").FirstOrDefault().Value != "3")
{
	<div class="d-flex justify-content-center">
		<div class="col-9 form-group">
			<RadzenDataGrid AllowFiltering="false" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
						Data="@treatments" TItem="Treatment" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
				<Columns>
					<RadzenDataGridColumn TItem="Treatment" Property="TreatmentName" Filterable="false" Title="Behandling" Width="100px" TextAlign="TextAlign.Center" />
					<RadzenDataGridColumn TItem="Treatment" Property="Description" Title="Beskrivelse" MinWidth="140px" />
					<RadzenDataGridColumn TItem="Treatment" Property="TreatmentId" Sortable="false" Filterable="false" Title="Rediger" Width="100px">
						<Template Context="data">
							<a class="btn btn-info" href="/edittreatment/@data.TreatmentId">
								<i class="bi bi-pencil-square"></i>
							</a>
						</Template>
					</RadzenDataGridColumn>
					<RadzenDataGridColumn TItem="Treatment" Sortable="false" Filterable="false" Property="TreatmentId" Title="Slet" Width="100px">
						<Template Context="data">
							<button class="btn btn-danger" @onclick="() => deleteOnClick(data.TreatmentId)">
								<i class="bi bi-trash"></i>
							</button>
						</Template>
					</RadzenDataGridColumn>
				</Columns>
			</RadzenDataGrid>
		</div>
	</div>
}

@code {
	private List<Treatment> treatments = new List<Treatment>();

	protected override async Task OnInitializedAsync()
	{
		treatments = await _apiService.GetAsync<List<Treatment>>($"{_config["Data:booking"]}/treatment");
	}

	public async Task deleteOnClick(int treatmentId)
	{
		bool res = await Jsruntime.InvokeAsync<bool>
		("confirm", $"Er du sikker på at du vil slette denne Behandling?");
		if (res)
		{
			await _treatmentRepo.DeleteTreatment(treatmentId);
			toastService.ShowSuccess("Behandlingen blev fjernet");
			await _apiService.GetAsync<List<Treatment>>($"{_config["Data:booking"]}/treatment");
		}
	}
}