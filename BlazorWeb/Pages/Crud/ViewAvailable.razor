@page "/viewavailables"
@inject NavigationManager NavigationManager

<table class="table">
	<thead>
		<tr>
			<td>
				Dato
			</td>
			<td>
				Er tiden taget
			</td>
			<td>
				Læge/sygepjeleske
			</td>
		</tr>
	</thead>
	<tbody>
		@foreach (var available in availables)
		{
			<tr>
				<td>
					@available.Date
				</td>
				@if (available.IsTaken == true)
				{
					<td>
						Ja
					</td>
				}
				else
				{
					<td>
						Nej
					</td>
				}

				<td>
					@employees.Where(e => e.Id == available.EmployeeId).FirstOrDefault().Firstname
					@employees.Where(e => e.Id == available.EmployeeId).FirstOrDefault().Lastname
				</td>
				<td>
					<a href="/editavailable/@available.AvailableId">
						<i class="bi bi-pencil-square"></i>
					</a>
				</td>
				<td>
					<button @onclick="() => deleteOnClick(available.AvailableId)">
						<i class="bi bi-trash"></i>
					</button>
				</td>
			</tr>
		}
	</tbody>

</table>



@code {
	private List<Available> availables = new List<Available>();
	private List<Employee> employees = new List<Employee>();

	protected override void OnInitialized()
	{
		availables = _availableRepo.GetAllAvailables().ToList();
		employees = _hospitalRepo.GetAllEmployees().ToList();
	}

	public async Task deleteOnClick(int availableId)
	{
		bool res = await Jsruntime.InvokeAsync<bool>
		("confirm", $"Er du sikker på at du vil slette denne tid?");
		if (res)
		{
			await _availableRepo.DeleteAvailable(availableId);
			toastService.ShowSuccess("Tiden blev fjernet");
			availables = _availableRepo.GetAllAvailables().ToList();
			//NavigationManager.NavigateTo("/");
		}
	}

}