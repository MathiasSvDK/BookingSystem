@page "/viewavailables"
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager
@attribute [Authorize]

@if (signInManager.Context.User.Claims.Where(c => c.Type == "gruppe").FirstOrDefault().Value != "3")
{
	<table class="table">
		<thead>
			<tr>
				<td>
					Dato
				</td>
				<td>
					Er tiden taget
				</td>
				<td>
					Læge/sygepjeleske
				</td>
			</tr>
		</thead>
		<tbody>
			@foreach (var available in availables)
			{
				<tr>
					<td>
						@available.Date
					</td>
					@if (available.IsTaken == true)
					{
						<td>
							Ja
						</td>
					}
					else
					{
						<td>
							Nej
						</td>
					}

					<td>
						@if (Employees != null || Employees.Count() != 0)
						{
							@Employees.Where(e => e.Id == available.EmployeeId).FirstOrDefault().Firstname

							@Employees.Where(e => e.Id == available.EmployeeId).FirstOrDefault().Lastname
						}

					</td>
					<td>
						<a class="btn btn-info" href="/editavailable/@available.AvailableId">
							<i class="bi bi-pencil-square"></i>
						</a>
					</td>
					<td>
						<button class="btn btn-danger" @onclick="() => deleteOnClick(available.AvailableId)">
							<i class="bi bi-trash"></i>
						</button>
					</td>
				</tr>
			}
		</tbody>

	</table>
}

@code {
	private List<Available> availables = new List<Available>();
	private List<ApplicationUser> Employees = new List<ApplicationUser>();

	protected override void OnInitialized()
	{
		availables = _availableRepo.GetAllAvailables().ToList();
		List<ApplicationUser> applicationUsers = userManager.Users.ToList();

		Employees.AddRange(applicationUsers.Where(e => e.Role != 3));

	}

	public async Task deleteOnClick(int availableId)
	{
		bool res = await Jsruntime.InvokeAsync<bool>
		("confirm", $"Er du sikker på at du vil slette denne tid?");
		if (res)
		{
			await _availableRepo.DeleteAvailable(availableId);
			toastService.ShowSuccess("Tiden blev fjernet");
			availables = _availableRepo.GetAllAvailables().ToList();
			//NavigationManager.NavigateTo("/");
		}
	}

}